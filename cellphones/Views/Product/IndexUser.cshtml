@model IEnumerable<cellphones.Models.Product>

@{
    ViewBag.Title = "IndexUser";
    @Styles.Render("~/Content/javascipt/chuyen.js")
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

<div class="section-title">
    <h2>ĐIỆN THOẠI NỔI BẬT NHẤT</h2>
    <a href="#" class="view-all">Xem tất cả</a>
</div>
<main class="container">
    <div class="book-grid">
        @foreach (var item in Model)
        {
            <div>
                <div class="book-card">
                    <a href="@Url.Action("DetailProduct", "Product", new { id = item.ProductID })">
                        <img src="@Url.Content(item.Image)"
                             alt="@item.ProductName"
                             class="book-image"
                             dat-idtruyen="@item.ProductID">
                    </a>
                    <div class="book-info">
                        <h3 class="book-title">@item.ProductName</h3>
                        <h4 class="book-title">@item.Price</h4>
                        <div class="stars">⭐⭐⭐⭐⭐</div>
                        @if (item.StockQuantity <= 0)
                        {
                            <div class="out-of-stock">Hết hàng</div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</main>

<!-- Floating Chat Bubble -->
<div id="chatBubble" class="chat-bubble">
    <i class="fa fa-comment"></i>
</div>

<!-- Chat Window -->
<div id="chatWindow" class="chat-window">
    <div class="chat-header">
        <div class="chat-title">
            <i class="fa fa-robot me-2"></i>
            <span>SGTech Assistant</span>
        </div>
        <div class="chat-actions">
            <button id="closeChat" class="btn-action">
                <i class="fa fa-times"></i>
            </button>
        </div>
    </div>
    <div id="chatMessages" class="chat-messages">
        <div class="bot-message">
            <div class="bot-avatar">
                <i class="fa fa-robot"></i>
            </div>
            <div class="message-content">
                Chào bạn! Tôi có thể giúp gì cho bạn?
            </div>
        </div>
    </div>
    <div class="chat-input">
        <input type="text" id="userInput" placeholder="Nhập tin nhắn..." />
        <button id="sendMessage">
            <i class="fa fa-paper-plane"></i>
        </button>
    </div>
</div>

<style>
    /* Original styles from your page */
    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 15px;
        width: 100%;
        box-sizing: border-box;
    }

    /* Category list styling */
    .category-list {
        display: flex;
        justify-content: space-between;
        margin: 30px auto;
        max-width: 1200px;
        padding: 0 15px;
        flex-wrap: wrap;
    }

    .category-item {
        display: flex;
        flex-direction: column;
        align-items: center;
        cursor: pointer;
        padding: 15px;
        border-radius: 10px;
        transition: all 0.3s ease;
        background-color: #f8f9fa;
        min-width: 120px;
        text-align: center;
        box-shadow: 0 2px 5px rgba(0,0,0,0.05);
    }

        .category-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            background-color: #e9ecef;
        }

    .category-icon {
        font-size: 24px;
        margin-bottom: 10px;
        color: #00b7bd;
    }

    /* Section title styling */
    .section-title {
        display: flex;
        justify-content: space-between;
        align-items: center;
        max-width: 1200px;
        margin: 40px auto 20px;
        padding: 0 15px;
        border-bottom: 2px solid #f0f0f0;
        padding-bottom: 10px;
    }

        .section-title h2 {
            font-size: 24px;
            margin: 0;
            color: #333;
        }

    .view-all {
        color: #00b7bd;
        text-decoration: none;
        font-weight: 600;
        transition: color 0.3s ease;
    }

        .view-all:hover {
            color: #008489;
            text-decoration: underline;
        }

    /* Product grid styling - this is the key part for horizontal layout */
    .book-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 30px;
        margin-bottom: 30px;
        padding-top: 20px;
        width: 100%;
    }

    /* Product card styling */
    .book-card {
        background-color: white;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        transition: transform 0.3s ease;
        display: flex;
        flex-direction: column;
        height: 100%;
    }

        .book-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 15px rgba(0,0,0,0.15);
        }

        .book-card a {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 200px;
            overflow: hidden;
            background-color: #f8f9fa;
        }

        .book-card img {
            width: auto;
            max-width: 100%;
            height: 200px;
            object-fit: contain; /* Changed from cover to contain for better product display */
            display: block;
            margin: 0 auto;
            transition: transform 0.3s ease;
        }

        .book-card:hover img {
            transform: scale(1.05);
        }

    .book-info {
        padding: 15px;
        display: flex;
        flex-direction: column;
        flex-grow: 1;
    }

    .book-title {
        font-size: 1.2em;
        margin-bottom: 10px;
        color: #333;
        line-height: 1.4;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .stars {
        margin-top: auto;
        color: #ffc107;
    }

    .out-of-stock {
        color: #e53935;
        font-weight: bold;
        margin-top: 5px;
        background-color: #ffebee;
        padding: 5px;
        border-radius: 4px;
        text-align: center;
    }

    /* Floating Chat Styles */
  .chat-bubble {
        position: fixed;
        bottom: 20px;
        right: 20px;
        width: 50px;
        height: 50px;
        background-color: #007bff;
        color: white;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        z-index: 1000;
    }

    .chat-window {
        position: fixed;
        bottom: 20px;
        right: 20px;
        width: 300px;
        height: 400px;
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
        display: none;
        flex-direction: column;
        z-index: 1001;
        overflow: hidden;
    }

    .chat-header {
        background-color: #007bff;
        color: white;
        padding: 10px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .chat-title {
        display: flex;
        align-items: center;
        font-weight: bold;
    }

    .btn-action {
        background: none;
        border: none;
        color: white;
        cursor: pointer;
    }

    .chat-messages {
        flex: 1;
        padding: 10px;
        overflow-y: auto;
        display: flex;
        flex-direction: column;
    }

    .bot-message, .user-message {
        margin-bottom: 10px;
        max-width: 80%;
        display: flex;
        align-items: flex-start;
    }

    .bot-message {
        align-self: flex-start;
    }

    .user-message {
        align-self: flex-end;
        flex-direction: row-reverse;
    }

    .bot-avatar {
        width: 25px;
        height: 25px;
        background-color: #eaeaea;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-right: 8px;
    }

    .message-content {
        padding: 8px 12px;
        border-radius: 15px;
    }

    .bot-message .message-content {
        background-color: #f1f1f1;
        color: #333;
    }

    .user-message .message-content {
        background-color: #007bff;
        color: white;
    }

    .chat-input {
        padding: 10px;
        display: flex;
        border-top: 1px solid #eaeaea;
    }

    .chat-input input {
        flex: 1;
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 20px;
        outline: none;
    }

    .chat-input button {
        background-color: #007bff;
        color: white;
        border: none;
        width: 35px;
        height: 35px;
        border-radius: 50%;
        margin-left: 8px;
        cursor: pointer;
    }

    .typing-indicator {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }

    .typing-dots {
        display: flex;
    }

    .typing-dots span {
        width: 5px;
        height: 5px;
        margin: 0 1px;
        background: #999;
        border-radius: 50%;
        opacity: 0.4;
        animation: typing 1s infinite;
    }

    .typing-dots span:nth-child(1) {
        animation-delay: 0s;
    }

    .typing-dots span:nth-child(2) {
        animation-delay: 0.3s;
    }

    .typing-dots span:nth-child(3) {
        animation-delay: 0.6s;
    }

    @@keyframes typing {
        0% {
            opacity: 0.4;
            transform: translateY(0);
        }
        50% {
            opacity: 1;
            transform: translateY(-5px);
        }
        100% {
            opacity: 0.4;
            transform: translateY(0);
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Show/hide chat functionality
        document.getElementById('chatBubble').addEventListener('click', function () {
            document.getElementById('chatWindow').style.display = 'flex';
            this.style.display = 'none';
            document.getElementById('chatMessages').scrollTop = document.getElementById('chatMessages').scrollHeight;
        });

        document.getElementById('closeChat').addEventListener('click', function () {
            document.getElementById('chatWindow').style.display = 'none';
            document.getElementById('chatBubble').style.display = 'flex';
        });

        // Send message functionality
        function sendMessage() {
            var userInput = document.getElementById('userInput');
            var message = userInput.value.trim();

            if (message === '') return;

            // Add user message
            var chatMessages = document.getElementById('chatMessages');
            var userMessageDiv = document.createElement('div');
            userMessageDiv.className = 'user-message';
            userMessageDiv.innerHTML = '<div class="message-content">' + message + '</div>';
            chatMessages.appendChild(userMessageDiv);

            // Clear input
            userInput.value = '';

            // Show typing indicator
            var typingIndicator = document.createElement('div');
            typingIndicator.className = 'bot-message';
            typingIndicator.id = 'typingIndicator';
            typingIndicator.innerHTML =
                '<div class="bot-avatar"><i class="fa fa-robot"></i></div>' +
                '<div class="message-content"><div class="typing-dots"><span></span><span></span><span></span></div></div>';
            chatMessages.appendChild(typingIndicator);

            // Scroll to bottom
            chatMessages.scrollTop = chatMessages.scrollHeight;

            // Send to server using AJAX
            fetch('/Chat/SendChatBotMessage', {  // Fixed endpoint URL
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: 'content=' + encodeURIComponent(message)
            })
                .then(response => response.json())
                .then(data => {
                    // Remove typing indicator
                    var indicator = document.getElementById('typingIndicator');
                    if (indicator) {
                        chatMessages.removeChild(indicator);
                    }

                    if (data.error) {
                        // Display error message
                        var errorDiv = document.createElement('div');
                        errorDiv.className = 'bot-message';
                        errorDiv.innerHTML =
                            '<div class="bot-avatar"><i class="fa fa-robot"></i></div>' +
                            '<div class="message-content">' + data.error + '</div>';
                        chatMessages.appendChild(errorDiv);
                    } else {
                        // Display bot response
                        var botMessageDiv = document.createElement('div');
                        botMessageDiv.className = 'bot-message';
                        botMessageDiv.innerHTML =
                            '<div class="bot-avatar"><i class="fa fa-robot"></i></div>' +
                            '<div class="message-content">' + data.botResponse.content + '</div>';
                        chatMessages.appendChild(botMessageDiv);
                    }

                    // Scroll to bottom
                    chatMessages.scrollTop = chatMessages.scrollHeight;
                })
                .catch(error => {
                    console.error('Error:', error);

                    // Remove typing indicator
                    var indicator = document.getElementById('typingIndicator');
                    if (indicator) {
                        chatMessages.removeChild(indicator);
                    }

                    // Display error message
                    var errorDiv = document.createElement('div');
                    errorDiv.className = 'bot-message';
                    errorDiv.innerHTML =
                        '<div class="bot-avatar"><i class="fa fa-robot"></i></div>' +
                        '<div class="message-content">Xin lỗi, không thể kết nối với máy chủ. Vui lòng thử lại sau.</div>';
                    chatMessages.appendChild(errorDiv);

                    // Scroll to bottom
                    chatMessages.scrollTop = chatMessages.scrollHeight;
                });
        }

        // Add event listeners
        document.getElementById('sendMessage').addEventListener('click', sendMessage);
        document.getElementById('userInput').addEventListener('keypress', function (e) {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });
    });
</script>